name: Build Lens

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths-ignore:
      - "**/README.md"
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 360
    steps:
      - name: Checkout OpenLens
        uses: actions/checkout@v3
      - name: Export version to variable
        run: |
          export LENS_VERSION=$(cat version)
          echo "LENS_VERSION=$LENS_VERSION" >> $GITHUB_ENV          
        shell: bash
      - uses: actions/setup-node@v3
        with:
          node-version: 16.15.0
      - name: Checkout Upstream Lens
        uses: actions/checkout@v3
        with:
          repository: lensapp/lens
          path: lens
          ref: v${{ env.LENS_VERSION }}
          fetch-depth: 1
      - name: Patch Upstream Lens
        run: |
          node update.js
      - name: Build Lens
        run: |
          mkdir releasefiles
          if [ "$RUNNER_OS" == "Windows" ]; then
            choco install visualstudio2019buildtools visualstudio2019-workload-vctools
          fi
          if [ "$RUNNER_OS" == "macOS" ]; then            
            if [ "${CSC_LINK}" = "" ]; then
              unset CSC_LINK
            fi
            
            if [ "${CSC_KEY_PASSWORD}" = "" ]; then
              unset CSC_KEY_PASSWORD
            fi
            yarn run all:install
            yarn run build
            yarn run build:app
            for file in open-lens/dist/OpenLens-${{ env.LENS_VERSION }}.dmg; do
              if [[ "$file" == *"arm64"* ]]; then
                cp "$file" releasefiles/OpenLens-${{ env.LENS_VERSION }}-arm64.dmg
              else
                cp "$file" releasefiles/OpenLens-${{ env.LENS_VERSION }}.dmg
              fi
            done
            for file in open-lens/dist/OpenLens-${{ env.LENS_VERSION }}-mac.zip; do
              if [[ "$file" == *"arm64"* ]]; then
                cp "$file" releasefiles/OpenLens-${{ env.LENS_VERSION }}-arm64.zip
              else
                cp "$file" releasefiles/OpenLens-${{ env.LENS_VERSION }}.zip
              fi
            done
          elif [ "$RUNNER_OS" == "Linux" ]; then
            yarn run all:install
            yarn run build
            yarn run build:app
            cp open-lens/dist/OpenLens-${{ env.LENS_VERSION }}.x86_64.AppImage releasefiles/OpenLens-${{ env.LENS_VERSION }}.AppImage
            cp open-lens/dist/OpenLens-${{ env.LENS_VERSION }}.amd64.deb releasefiles/OpenLens-${{ env.LENS_VERSION }}.deb
            cp open-lens/dist/OpenLens-${{ env.LENS_VERSION }}.x86_64.rpm releasefiles/OpenLens-${{ env.LENS_VERSION }}.rpm
            cp open-lens/dist/OpenLens-${{ env.LENS_VERSION }}.arm64.AppImage releasefiles/OpenLens-${{ env.LENS_VERSION }}.arm64.AppImage
            cp open-lens/dist/OpenLens-${{ env.LENS_VERSION }}.arm64.deb releasefiles/OpenLens-${{ env.LENS_VERSION }}.arm64.deb
            cp open-lens/dist/OpenLens-${{ env.LENS_VERSION }}.aarch64.rpm releasefiles/OpenLens-${{ env.LENS_VERSION }}.arm64.rpm
          else
            yarn run all:install
            yarn run build
            yarn run build:app
            cp open-lens/dist/OpenLens*.exe releasefiles/OpenLens-${{ env.LENS_VERSION }}.exe
            cp open-lens/dist/OpenLens*.exe packages/open-lens/dist/OpenLens-${{ env.LENS_VERSION }}.exe
          fi
        shell: bash
        working-directory: lens
        env:
          APPBUNDLEID: "io.kontena.lens-app"
          APPLEID: ${{ secrets.APPLEID }}
          APPLEIDPASS: ${{ secrets.APPLEIDPASS }}
          CSC_LINK: ${{ runner.os == 'macos' && secrets.CSC_LINK || secrets.CSC_LINK_WIN }}
          CSC_KEY_PASSWORD: ${{ runner.os == 'macos' && secrets.CSC_KEY_PASSWORD || secrets.CSC_KEY_PASSWORD_WIN}}
          CSC_LINK_WIN: ${{ secrets.CSC_LINK_WIN }}
          CSC_KEY_PASSWORD_WIN: ${{ secrets.CSC_KEY_PASSWORD_WIN }}
          WIN_CSC_LINK: ${{ secrets.CSC_LINK_WIN }}
          WIN_CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD_WIN }}
          CSC_FOR_PULL_REQUEST: true

      - name: Calculate SHA256 checksum
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            certutil -hashfile OpenLens-${{ env.LENS_VERSION }}.exe SHA256 | tee OpenLens-${{ env.LENS_VERSION }}.exe.sha256
          else
            for filename in OpenLens-${{ env.LENS_VERSION }}*; do shasum -a 256 ${filename} | tee ${filename}.sha256 ; done
          fi
        shell: bash
        working-directory: lens/open-lens/dist

      - uses: actions/upload-artifact@v3
        if: github.ref != 'refs/heads/main'
        with:
          name: OpenLens-${{ matrix.os }}
          retention-days: 5
          path: |
            lens/open-lens/dist/OpenLens-${{ env.LENS_VERSION }}*.dmg
            lens/open-lens/dist/OpenLens-${{ env.LENS_VERSION }}*.AppImage
            lens/open-lens/dist/OpenLens-${{ env.LENS_VERSION }}*.deb
            lens/open-lens/dist/OpenLens-${{ env.LENS_VERSION }}*.rpm
            lens/open-lens/dist/OpenLens-${{ env.LENS_VERSION }}*.zip
            lens/open-lens/dist/OpenLens-${{ env.LENS_VERSION }}.exe
            lens/open-lens/dist/OpenLens-${{ env.LENS_VERSION }}*.sha256

      - name: Generate Changelog
        run: curl -s https://api.github.com/repos/lensapp/lens/releases/latest | jq -r 'select(.prerelease == false) | .body[0:]' > ${{ github.workspace }}-CHANGELOG.txt
      - name: Release
        uses: softprops/action-gh-release@v0.1.15
        if: github.ref == 'refs/heads/main'
        with:
          tag_name: v${{ env.LENS_VERSION }}
          body_path: ${{ github.workspace }}-CHANGELOG.txt
          files: |
            lens/open-lens/dist/OpenLens-${{ env.LENS_VERSION }}*.dmg
            lens/open-lens/dist/OpenLens-${{ env.LENS_VERSION }}*.AppImage
            lens/open-lens/dist/OpenLens-${{ env.LENS_VERSION }}*.deb
            lens/open-lens/dist/OpenLens-${{ env.LENS_VERSION }}*.rpm
            lens/open-lens/dist/OpenLens-${{ env.LENS_VERSION }}*.zip
            lens/open-lens/dist/OpenLens-${{ env.LENS_VERSION }}.exe
            lens/open-lens/dist/OpenLens-${{ env.LENS_VERSION }}*.sha256
      - name: Latest
        uses: softprops/action-gh-release@v0.1.15
        if: github.ref == 'refs/heads/main'
        with:
          tag_name: Latest
          files: |
            lens/open-lens/dist/OpenLens-${{ env.LENS_VERSION }}*.dmg
            lens/open-lens/dist/OpenLens-${{ env.LENS_VERSION }}*.AppImage
            lens/open-lens/dist/OpenLens-${{ env.LENS_VERSION }}*.deb
            lens/open-lens/dist/OpenLens-${{ env.LENS_VERSION }}*.rpm
            lens/open-lens/dist/OpenLens-${{ env.LENS_VERSION }}*.zip
            lens/open-lens/dist/OpenLens.Setup.${{ env.LENS_VERSION }}.exe
            lens/open-lens/dist/lates*.yml
